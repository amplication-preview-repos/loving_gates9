/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Vmal0 as PrismaVmal0 } from "@prisma/client";

export class Vmal0ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.Vmal0CountArgs, "select">): Promise<number> {
    return this.prisma.vmal0.count(args);
  }

  async vmal0s(args: Prisma.Vmal0FindManyArgs): Promise<PrismaVmal0[]> {
    return this.prisma.vmal0.findMany(args);
  }
  async vmal0(args: Prisma.Vmal0FindUniqueArgs): Promise<PrismaVmal0 | null> {
    return this.prisma.vmal0.findUnique(args);
  }
  async createVmal0(args: Prisma.Vmal0CreateArgs): Promise<PrismaVmal0> {
    return this.prisma.vmal0.create(args);
  }
  async updateVmal0(args: Prisma.Vmal0UpdateArgs): Promise<PrismaVmal0> {
    return this.prisma.vmal0.update(args);
  }
  async deleteVmal0(args: Prisma.Vmal0DeleteArgs): Promise<PrismaVmal0> {
    return this.prisma.vmal0.delete(args);
  }
}
